name: Pre-commit Checks

on:
  push:
  pull_request:

jobs:
  pre-commit-checks:
    name: Pre-commit Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json
      
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      
      - name: Install prettier
        run: npm install -g prettier
      
      - name: Download Go dependencies
        run: go mod download
      
      - name: Run prettier on markdown files
        run: |
          echo "Running prettier on markdown files..."
          if ! prettier --check "*.md"; then
            echo "❌ Markdown files are not formatted with prettier. Run: npx prettier --write \"*.md\""
            exit 1
          fi
          echo "✅ All markdown files are properly formatted!"
      
      - name: Run golangci-lint fmt
        run: |
          echo "Running golangci-lint fmt..."
          # Install golangci-lint
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin latest
          export PATH=$PATH:$(go env GOPATH)/bin
          if ! golangci-lint fmt; then
            echo "❌ golangci-lint fmt failed"
            exit 1
          fi
          echo "✅ Go formatting check passed!"
      
      - name: Run golangci-lint
        run: |
          echo "Running golangci-lint run..."
          export PATH=$PATH:$(go env GOPATH)/bin
          if ! golangci-lint run ./...; then
            echo "❌ golangci-lint run failed"
            exit 1
          fi
          echo "✅ Go linting check passed!"
      
      - name: Run tests
        run: |
          echo "Running tests..."
          if ! go test ./...; then
            echo "❌ Tests failed"
            exit 1
          fi
          echo "✅ All tests passed!"
      
      - name: Success message
        run: echo "✅ All pre-commit checks passed!"